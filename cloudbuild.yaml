# Cloud Build pipeline for Unmai.ai frontend and backend
# Optimized for efficiency with Artifact Registry and proper caching

substitutions:
  _REGION: us-central1
  _FRONTEND_SERVICE: unmai-frontend
  _BACKEND_SERVICE: unmai-backend
  _ARTIFACT_REGISTRY: us-central1-docker.pkg.dev
  _REPOSITORY: unmai-repo

options:
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true
  machineType: E2_HIGHCPU_8
  diskSizeGb: 100

timeout: 1800s

images:
  - ${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/unmai-frontend:$BUILD_ID
  - ${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/unmai-backend:$BUILD_ID

steps:
  # Configure Docker for Artifact Registry
  - id: configure-docker
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        gcloud auth configure-docker ${_ARTIFACT_REGISTRY}

  # Backend build & push (parallel with frontend)
  - id: build-backend
    name: gcr.io/cloud-builders/docker
    dir: backend
    args:
      - build
      - --cache-from=${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/unmai-backend:latest
      - -t=${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/unmai-backend:$BUILD_ID
      - -t=${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/unmai-backend:latest
      - .
    waitFor: ['configure-docker']

  - id: push-backend
    name: gcr.io/cloud-builders/docker
    args: ["push", "--all-tags", "${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/unmai-backend"]
    waitFor: ['build-backend']

  # Deploy Backend to Cloud Run
  - id: deploy-backend
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run deploy "$_BACKEND_SERVICE" \
          --image ${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/unmai-backend:$BUILD_ID \
          --region "$_REGION" \
          --platform managed \
          --port 3001 \
          --memory=1Gi \
          --cpu=1 \
          --concurrency=80 \
          --timeout=600 \
          --min-instances=0 \
          --max-instances=10 \
          --set-env-vars NODE_ENV=production \
          --set-env-vars REQUEST_SIZE_LIMIT=50mb \
          --set-env-vars GCP_PROJECT_ID=$PROJECT_ID \
          --set-secrets GEMINI_API_KEY=gemini-api-key:latest \
          --execution-environment gen2 \
          --allow-unauthenticated
    waitFor: ['push-backend']

  # Get backend URL and build frontend with it
  - id: get-backend-url
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        BACKEND_URL=$$(gcloud run services describe "$_BACKEND_SERVICE" --region "$_REGION" --format='value(status.url)')
        echo "Backend URL: $$BACKEND_URL"
        echo "NEXT_PUBLIC_API_BASE_URL=$$BACKEND_URL" > frontend/.env.production
    waitFor: ['deploy-backend']

  # Frontend build & push with backend URL
  - id: build-frontend
    name: gcr.io/cloud-builders/docker
    dir: frontend
    args:
      - build
      - --cache-from=${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/unmai-frontend:latest
      - -t=${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/unmai-frontend:$BUILD_ID
      - -t=${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/unmai-frontend:latest
      - .
    waitFor: ['get-backend-url']

  - id: push-frontend
    name: gcr.io/cloud-builders/docker
    args: ["push", "--all-tags", "${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/unmai-frontend"]
    waitFor: ['build-frontend']

  # Deploy Frontend to Cloud Run
  - id: deploy-frontend
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run deploy "$_FRONTEND_SERVICE" \
          --image ${_ARTIFACT_REGISTRY}/$PROJECT_ID/${_REPOSITORY}/unmai-frontend:$BUILD_ID \
          --region "$_REGION" \
          --platform managed \
          --port 3000 \
          --memory=1Gi \
          --cpu=1 \
          --concurrency=1000 \
          --timeout=300 \
          --min-instances=0 \
          --max-instances=10 \
          --set-env-vars NODE_ENV=production \
          --execution-environment gen2 \
          --allow-unauthenticated
    waitFor: ['push-frontend']

# Notes:
# - Uses Artifact Registry for better performance and reliability
# - Uses Secret Manager for secure API key storage
# - Optimized with build caching and parallel execution
# - Configured for efficient resource usage
