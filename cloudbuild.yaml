# Cloud Build pipeline for Unmai.ai frontend and backend
# Builds Docker images for both services and deploys to Cloud Run.

substitutions:
  # Required at trigger time or via gcloud builds submit --substitutions
  # _REGION, _FRONTEND_SERVICE, _BACKEND_SERVICE are customizable
  _REGION: us-central1
  _FRONTEND_SERVICE: unmai-frontend
  _BACKEND_SERVICE: unmai-backend

options:
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true

images:
  - gcr.io/$PROJECT_ID/unmai-frontend:$BUILD_ID
  - gcr.io/$PROJECT_ID/unmai-backend:$BUILD_ID

steps:
  # Frontend build & push
  - id: build-frontend
    name: gcr.io/cloud-builders/docker
    dir: frontend
    args: ["build", "-t", "gcr.io/$PROJECT_ID/unmai-frontend:$BUILD_ID", "."]

  - id: push-frontend
    name: gcr.io/cloud-builders/docker
    args: ["push", "gcr.io/$PROJECT_ID/unmai-frontend:$BUILD_ID"]

  # Backend build & push
  - id: build-backend
    name: gcr.io/cloud-builders/docker
    dir: backend
    args: ["build", "-t", "gcr.io/$PROJECT_ID/unmai-backend:$BUILD_ID", "."]

  - id: push-backend
    name: gcr.io/cloud-builders/docker
    args: ["push", "gcr.io/$PROJECT_ID/unmai-backend:$BUILD_ID"]

  # Deploy Backend to Cloud Run (can be private; remove --allow-unauthenticated if you want auth)
  - id: deploy-backend
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run deploy "$_BACKEND_SERVICE" \
          --image gcr.io/$PROJECT_ID/unmai-backend:$BUILD_ID \
          --region "$_REGION" \
          --platform managed \
          --port 3001 \
          --memory=1Gi \
          --cpu=1 \
          --concurrency=80 \
          --timeout=600 \
          --min-instances=0 \
          --max-instances=5 \
          --set-env-vars NODE_ENV=production \
          --set-env-vars REQUEST_SIZE_LIMIT=50mb \
          --set-env-vars GCP_PROJECT_ID=$PROJECT_ID \
          --set-env-vars GEMINI_API_KEY=${_GEMINI_API_KEY} \
          --allow-unauthenticated

  # Deploy Frontend to Cloud Run (public)
  - id: deploy-frontend
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        gcloud run deploy "$_FRONTEND_SERVICE" \
          --image gcr.io/$PROJECT_ID/unmai-frontend:$BUILD_ID \
          --region "$_REGION" \
          --platform managed \
          --port 3000 \
          --memory=1Gi \
          --cpu=1 \
          --concurrency=100 \
          --timeout=600 \
          --min-instances=0 \
          --max-instances=5 \
          --set-env-vars NODE_ENV=production \
          --allow-unauthenticated

  # Wire frontend with backend URL as NEXT_PUBLIC_API_BASE_URL
  - id: wire-frontend-api-url
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        BACKEND_URL=$$(gcloud run services describe "$_BACKEND_SERVICE" --region "$_REGION" --format='value(status.url)'); \
        echo "Backend URL: $$BACKEND_URL"; \
        gcloud run services update "$_FRONTEND_SERVICE" \
          --region "$_REGION" \
          --set-env-vars NEXT_PUBLIC_API_BASE_URL=$$BACKEND_URL

# Notes:
# - Provide _GEMINI_API_KEY as a Cloud Build substitution or configure a Secret Manager reference.
# - If you prefer Secret Manager, replace --set-env-vars GEMINI_API_KEY with --set-secrets GEMINI_API_KEY=projects/$PROJECT_ID/secrets/GEMINI_API_KEY:latest
