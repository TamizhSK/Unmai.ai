# ============================================================================
# Verity AI Backend Environment Configuration
# ============================================================================


# REQUIRED: Google Cloud Project (for Vertex AI)
GCP_PROJECT_ID=helpful-cat-465008-h1


# REQUIRED: Gemini API Key (for direct Gemini API access)
GEMINI_API_KEY=AIzaSyBwQVZ5yiiqgCWjiyAKmVRn7RE7kY7dM_A


# OPTIONAL: Google Cloud Configuration (defaults provided)
GCP_LOCATION=us-central1


# OPTIONAL: AI Model Configuration (defaults to latest models)
VERTEX_AI_TEXT_MODEL=gemini-2.5-pro
VERTEX_AI_VISION_MODEL=gemini-2.5-pro


# OPTIONAL: Speech API Configuration (defaults to US English)
SPEECH_LANGUAGE_CODE=en-US
SPEECH_MODEL=latest_long


# OPTIONAL: Server Configuration (defaults provided)
PORT=3001
REQUEST_SIZE_LIMIT=50mb
# Modern Chrome User-Agent for better web compatibility and reduced bot detection
USER_AGENT=Mozilla/5.0 (compatible; unmai.ai/1.0; +https://unmai.ai)


# ============================================================================
# Google Cloud Authentication Options (Choose ONE):
# ============================================================================


# Option 1: Application Default Credentials (RECOMMENDED)
# Run: gcloud auth application-default login
# This automatically sets up authentication for all Google Cloud services


# Option 2: Service Account Key (if needed)
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json


# ============================================================================
# AI Model Configuration:
# ============================================================================
# This backend supports BOTH authentication methods:
# 1. Vertex AI (via ADC): For production use with Google Cloud
# 2. Direct Gemini API: For development or alternative deployment
#
# COMPLETE SETUP GUIDE:
# ============================================================================
# 
# STEP 1: Install Dependencies
#   cd /path/to/verity/backend
#   npm install
#
# STEP 2: Configure Google Cloud Authentication
#   gcloud auth application-default login
#   (This creates ~/.config/gcloud/application_default_credentials.json)
#
# STEP 3: Enable Required APIs in Google Cloud Console
#   - Vertex AI API
#   - Cloud Speech-to-Text API  
#   - Cloud Translation API
#   - Vision API
#   - Video Intelligence API
#   - Web Risk API
#
# STEP 4: Get Gemini API Key
#   Visit: https://makersuite.google.com/app/apikey
#   Update GEMINI_API_KEY above with your key
#
# STEP 5: Update Project ID  
#   Update GCP_PROJECT_ID above with your Google Cloud Project ID
#
# STEP 6: Start Backend
#   npm run dev (development)
#   npm run build && npm start (production)
#
# TROUBLESHOOTING:
# - If authentication fails: Check gcloud auth list
# - If APIs fail: Ensure all required APIs are enabled in GCP Console  
# - If project not found: Verify GCP_PROJECT_ID matches your project
# - If Gemini fails: Verify GEMINI_API_KEY is valid and has quota
#
# SECURITY NOTES:
# - Never commit this file to version control (.gitignore protects it)
# - Both GCP_PROJECT_ID and GEMINI_API_KEY are required
# - ADC handles auth for most Google Cloud services automatically
# - Gemini API key provides fallback/alternative AI access
# ============================================================================
